{
  "version": 3,
  "sources": ["../../app/root.tsx"],
  "sourcesContent": ["/*\nResponsible for providing the structure of the application. \nIts default export is a component that renders the full HTML tree\nthat every other route loads and depends on.\n*/\nimport type { ReactNode } from \"react\";\nimport type { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport {\n  Link,\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n} from \"@remix-run/react\";\nimport toastStyles from \"react-toastify/dist/ReactToastify.css\";\nimport stylesheet from \"~/styles/tailwind.css\";\n\n/*\nThe links function defines which <link> elements to add\nto the page when the user visits a route.\n*/\nexport const links: LinksFunction = () => {\n  return [\n    {\n      rel: \"stylesheet\",\n      href: toastStyles,\n    },\n    { rel: \"stylesheet\", href: stylesheet },\n  ];\n};\n\n/*\nThe meta export will set meta tags for your html document.\n*/\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport default function App() {\n  return (\n    <Document>\n      <Layout>\n        <Outlet />\n      </Layout>\n    </Document>\n  );\n}\n\nfunction Document({\n  children,\n  title = `Remix: So great, it's funny!`,\n}: {\n  children: ReactNode;\n  title?: string;\n}) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <Meta />\n        <title>{title}</title>\n        <Links />\n      </head>\n      <body className=\"dark\">\n        {children}\n        <ScrollRestoration />\n        <Scripts />\n        {process.env.NODE_ENV === \"development\" ? <LiveReload /> : null}\n      </body>\n    </html>\n  );\n}\n\nfunction Layout({ children }: { children: ReactNode }) {\n  return <div className=\"container prose w-full p-4\">{children}</div>;\n}\n\n// https://remix.run/docs/en/v1/api/conventions#errorboundary\nexport function ErrorBoundary({ error }: any) {\n  console.error(error);\n  return (\n    <Document title=\"Error!\">\n      <Layout>\n        <div>\n          <h1>There was an error</h1>\n          <p>{error.message}</p>\n          <hr />\n          <p>\n            Hey, developer, you should replace this with what you want your\n            users to see. Back to <Link to=\"/\">safety</Link>.\n          </p>\n        </div>\n      </Layout>\n    </Document>\n  );\n}\n\n// https://remix.run/docs/en/v1/api/conventions#catchboundary\nexport function CatchBoundary() {\n  let caught = useCatch();\n\n  let message;\n  switch (caught.status) {\n    case 401:\n      message = (\n        <p>\n          Oops! Looks like you tried to visit a page that you do not have access\n          to. Back to <Link to=\"/\">safety</Link>.\n        </p>\n      );\n      break;\n    case 404:\n      message = (\n        <p>\n          Oops! Looks like you tried to visit a page that does not exist. Back\n          to <Link to=\"/\">safety</Link>.\n        </p>\n      );\n      break;\n\n    default:\n      throw new Error(caught.data || caught.statusText);\n  }\n\n  return (\n    <Document title={`${caught.status} ${caught.statusText}`}>\n      <Layout>\n        <h1>\n          {caught.status}: {caught.statusText}\n        </h1>\n        {message}\n      </Layout>\n    </Document>\n  );\n}\n"],
  "mappings": "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",
  "names": []
}
